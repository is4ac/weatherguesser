{"version":3,"sources":["components/general/AnimatedAlert.tsx","components/temp-guesser/CurrentTempDisplay.tsx","components/temp-guesser/Results.tsx","components/temp-guesser/CityPrompt.tsx","model/game-round.ts","components/general/GameOver.tsx","styles/theme.ts","contexts.ts","components/general/SettingsDialog.tsx","components/page-parts/NavBar.tsx","components/page-parts/Layout.tsx","components/general/GoogleMap.tsx","components/general/GuessFormButton.tsx","components/general/IntegerTextField.tsx","components/general/InputSlider.tsx","components/temp-guesser/TempGuessForm.tsx","components/general/ScoreDisplay.tsx","components/general/CityStepper.tsx","pages/TempGuessGame.tsx","Routes.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["AnimatedAlert","show","message","severity","icon","fontSize","Grow","in","timeout","easing","Alert","CurrentTempDisplay","city","temp","theme","useTheme","Box","sx","display","flexDirection","justifyContent","alignItems","Typography","component","lineHeight","padding","color","palette","secondary","contrastText","bgcolor","main","fontWeight","Results","guessedTemp","scoreEarned","correctTemp","resultDifference","Math","abs","alertVariant","mb","CityPrompt","location","align","variant","GameRound","score","cities","cityNumber","this","countryCode","key","includes","push","difference","max","length","NUM_CITIES","GameOver","gameRound","onButtonClick","mt","Button","onClick","headingDefaults","colorPalette","createTheme","primary","lightPalette","light","lighterPalette","darkPalette","dark","themeCustomComponents","components","MuiAlert","styleOverrides","standardSuccess","backgroundColor","standardInfo","standardWarning","standardError","MuiSvgIcon","root","MuiSwitch","switchBase","checked","track","ColorModeContext","createContext","toggleColorMode","TempModeContext","toggleTempMode","mode","SettingsDialog","open","onClose","colorMode","useContext","tempMode","Dialog","fullWidth","maxWidth","DialogTitle","DialogContent","noValidate","m","width","FormControlLabel","control","Switch","onChange","label","labelPlacement","Tooltip","title","disabled","DialogActions","ThemeProvider","NavBar","useState","openSettings","setOpenSettings","AppBar","position","background","Container","Toolbar","disableGutters","ml","custom","margin","mr","flexGrow","IconButton","size","aria-label","aria-haspopup","noWrap","letterSpacing","xs","sm","style","Layout","children","minHeight","GoogleMap","params","process","replace","pb","pt","height","iframe","top","left","border","filter","undefined","loading","allowFullScreen","src","GuessFormButton","next","onNext","type","IntegerTextField","value","inputProps","onError","onBlur","TextField","event","target","parsedInt","parseInt","Number","isFinite","toString","pattern","textAlign","InputSlider","marks","min","step","sliderValue","Stack","spacing","direction","Slider","orientation","valueLabelDisplay","aria-labelledby","_event","newValue","Array","isArray","num","TempGuessForm","onSubmit","textFieldDisabled","tempGuess","onTempGuessChange","onNextButtonClick","hasError","setHasError","useMemo","id","preventDefault","ScoreDisplay","CityStepper","activeStep","steps","Stepper","map","Step","StepLabel","fill","TempGuessGame","prefix","gameRoundRef","useRef","setCity","cityAscii","setCityAscii","country","setCountry","setCountryCode","state","setState","setTempGuess","setCorrectTemp","displayResults","setDisplayResults","setScore","setScoreEarned","gameOver","setGameOver","useEffect","getRandomCity","axios","get","then","response","data","current","addCity","catch","error","console","log","e","reset","encodeURI","tempGuessNum","temperature","round","updateScore","isGameOver","guess","Routes","basename","path","exact","App","prefersDarkMode","useMediaQuery","setMode","colorModeContext","prevMode","setTempMode","tempModeContext","React","typography","h1","h2","h3","h4","h5","h6","paper","grey","default","text","getDesignTokens","jssStyles","document","querySelector","parentElement","removeChild","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d400f7e1.chunk.js","sourcesContent":["import { Alert, AlertColor, Grow } from '@mui/material'\nimport ErrorOutlineIcon from '@mui/icons-material/ErrorOutline'\nimport React from 'react'\n\nconst AnimatedAlert = ({\n  show,\n  message,\n  severity = 'error',\n  icon = <ErrorOutlineIcon fontSize='inherit' />,\n}: {\n  show: boolean\n  message: string\n  severity?: AlertColor\n  icon?: React.ReactNode\n}): JSX.Element => {\n  return (\n    <Grow in={show} timeout={400} easing='ease-in-out'>\n      <Alert severity={severity} icon={icon}>\n        {message}\n      </Alert>\n    </Grow>\n  )\n}\n\nexport default AnimatedAlert\n","import { Box, Theme, Typography, useTheme } from '@mui/material'\nimport React from 'react'\n\nconst CurrentTempDisplay = ({ city, temp }: { city: string; temp: number }): JSX.Element => {\n  const theme = useTheme<Theme>()\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>\n      <Typography component='span'>\n        The current temperature in{' '}\n        <Typography\n          component='span'\n          lineHeight='1.7rem'\n          padding='0.35rem 0.25rem'\n          color={theme.palette.secondary.contrastText}\n          bgcolor={theme.palette.secondary.main}\n          fontWeight={600}\n        >\n          {city}\n        </Typography>{' '}\n        is{' '}\n        <Typography fontWeight={600} component='span'>\n          {temp}\n        </Typography>\n        °F!\n      </Typography>\n    </Box>\n  )\n}\n\nexport default CurrentTempDisplay\n","import { AlertColor, Box } from '@mui/material'\nimport AnimatedAlert from '../general/AnimatedAlert'\nimport CurrentTempDisplay from './CurrentTempDisplay'\n\nconst Results = ({\n  guessedTemp,\n  scoreEarned,\n  correctTemp,\n  city,\n}: {\n  guessedTemp: number\n  scoreEarned: number\n  correctTemp: number\n  city: string\n}): JSX.Element => {\n  const resultDifference = Math.abs(correctTemp - guessedTemp)\n  let alertVariant: AlertColor = 'success'\n  let message = ''\n\n  if (resultDifference === 0) {\n    alertVariant = 'success'\n    message = `Your guess of ${guessedTemp} was perfect!! You earned ${scoreEarned} points!`\n  } else if (resultDifference <= 5) {\n    alertVariant = 'info'\n    message = `So close! Your guess of ${guessedTemp} was only off by ${resultDifference}\\xB0F! You earned ${scoreEarned} points!`\n  } else if (resultDifference <= 20) {\n    alertVariant = 'warning'\n    message = `Your guess of ${guessedTemp} was off by ${resultDifference}\\xB0F! You earned ${scoreEarned} points!`\n  } else {\n    alertVariant = 'error'\n    message = `Your guess of ${guessedTemp} was off by ${resultDifference}\\xB0F! You lost ${-scoreEarned} points...`\n  }\n\n  return (\n    <Box>\n      <Box sx={{ mb: 2 }}>\n        <AnimatedAlert show={true} message={message} severity={alertVariant} />\n      </Box>\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <CurrentTempDisplay city={city} temp={correctTemp} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default Results\n","import { Box, Theme, Typography } from '@mui/material'\nimport { useTheme } from '@mui/styles'\nimport { Grow } from '@mui/material'\nimport React from 'react'\n\nconst CityPrompt = ({ location }: { location: string }): JSX.Element => {\n  const theme = useTheme<Theme>()\n\n  return (\n    <Box\n      sx={{\n        display: 'flex',\n        justifyContent: 'center',\n      }}\n    >\n      <Typography align='center' lineHeight='1.7rem' variant='body1'>\n        Guess the current temperature for\n        <br />\n        <Grow in={true} timeout={500} easing='ease-in-out'>\n          <Typography\n            component='span'\n            variant='h5'\n            lineHeight='1.7rem'\n            padding='0.35rem 0.25rem'\n            color={theme.palette.secondary.contrastText}\n            bgcolor={theme.palette.secondary.main}\n            fontWeight={600}\n          >\n            {location}\n          </Typography>\n        </Grow>\n      </Typography>\n    </Box>\n  )\n}\n\nexport default CityPrompt\n","export default class GameRound {\n  score: number\n  cities: string[]\n  cityNumber: number\n  static NUM_CITIES = 5\n\n  constructor() {\n    this.score = 0\n    this.cities = []\n    this.cityNumber = 0\n  }\n\n  addCity(city: string, countryCode: string) {\n    let key = city + ',' + countryCode\n    if (this.cities.includes(key)) {\n      return false\n    } else {\n      this.cities.push(key)\n      this.cityNumber++\n      return true\n    }\n  }\n\n  updateScore(difference: number) {\n    let scoreEarned = Math.max(20 - difference, -20)\n    this.score += scoreEarned\n    return scoreEarned\n  }\n\n  isGameOver() {\n    return this.cities.length >= GameRound.NUM_CITIES\n  }\n\n  reset() {\n    this.score = 0\n    this.cities = []\n    this.cityNumber = 0\n  }\n}\n","import { Alert, Box, Button, Typography } from '@mui/material'\nimport React from 'react'\nimport GameRound from '../../model/game-round'\n\nconst GameOver = ({\n  gameRound,\n  onButtonClick,\n}: {\n  gameRound: GameRound\n  onButtonClick: (event: React.MouseEvent) => void\n}): JSX.Element => {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n      <Alert severity='success'>Round over!</Alert>\n\n      <Typography variant='button' component='span' sx={{ mt: 4 }}>\n        Final score:{' '}\n        <Typography fontWeight={600} component='span'>\n          {gameRound.score}\n        </Typography>\n      </Typography>\n\n      <Button variant='contained' color='secondary' onClick={onButtonClick} sx={{ mt: 4 }}>\n        Play Again\n      </Button>\n    </Box>\n  )\n}\n\nexport default GameOver\n","import { PaletteMode } from '@mui/material'\nimport { grey } from '@mui/material/colors'\nimport { createTheme } from '@mui/material/styles'\nimport { createContext } from 'react'\n\ndeclare module '@mui/material/styles' {\n  interface ThemeOptions {\n    custom?: {\n      margin: number\n    }\n  }\n  interface Theme {\n    custom?: {\n      margin: number\n    }\n  }\n}\n\n// https://stackoverflow.com/questions/47977618/accessing-previous-theme-variables-in-createmuitheme.\n// const baseTheme = createTheme()\n\nconst headingDefaults = {\n  fontWeight: 500,\n  lineHeight: 1.2,\n}\n\nconst colorPalette = createTheme({\n  palette: {\n    primary: {\n      main: '#2c748c',\n    },\n    secondary: {\n      main: '#442c8c',\n    },\n  },\n})\n\nexport const lightPalette = createTheme({\n  palette: {\n    primary: {\n      main: colorPalette.palette.primary.light,\n    },\n    secondary: {\n      main: colorPalette.palette.secondary.light,\n    },\n  },\n})\n\nexport const lighterPalette = createTheme({\n  palette: {\n    primary: {\n      main: lightPalette.palette.primary.light,\n    },\n    secondary: {\n      main: lightPalette.palette.secondary.light,\n    },\n  },\n})\n\nexport const darkPalette = createTheme({\n  palette: {\n    primary: {\n      main: colorPalette.palette.primary.dark,\n    },\n    secondary: {\n      main: colorPalette.palette.secondary.dark,\n    },\n  },\n})\n\nconst themeCustomComponents = {\n  components: {\n    MuiAlert: {\n      styleOverrides: {\n        standardSuccess: {\n          backgroundColor: colorPalette.palette.primary.main,\n          color: colorPalette.palette.primary.contrastText,\n        },\n        standardInfo: {\n          backgroundColor: colorPalette.palette.primary.main,\n          color: colorPalette.palette.primary.contrastText,\n        },\n        standardWarning: {\n          backgroundColor: colorPalette.palette.secondary.main,\n          color: colorPalette.palette.secondary.contrastText,\n        },\n        standardError: {\n          backgroundColor: colorPalette.palette.secondary.main,\n          color: colorPalette.palette.secondary.contrastText,\n        },\n      },\n    },\n    MuiSvgIcon: {\n      styleOverrides: {\n        root: {\n          color: colorPalette.palette.primary.contrastText,\n        },\n      },\n    },\n    MuiSwitch: {\n      styleOverrides: {\n        root: {},\n        switchBase: {\n          '&.Mui-checked': {\n            // Controls checked color for the thumb\n            color: lighterPalette.palette.primary.main,\n          },\n          '&.Mui-checked + .MuiSwitch-track': {\n            backgroundColor: lighterPalette.palette.primary.main,\n          },\n        },\n        checked: {},\n        track: {},\n      },\n    },\n  },\n}\n\nexport const getDesignTokens = (mode: PaletteMode) => ({\n  ...themeCustomComponents,\n  custom: {\n    margin: 4,\n  },\n  spacing: 4,\n  typography: {\n    h1: {\n      ...headingDefaults,\n      fontSize: '2.25rem',\n    },\n    h2: {\n      ...headingDefaults,\n      fontSize: '2rem',\n    },\n    h3: {\n      ...headingDefaults,\n      fontSize: '1.75rem',\n    },\n    h4: {\n      ...headingDefaults,\n      fontSize: '1.5rem',\n    },\n    h5: {\n      ...headingDefaults,\n      fontSize: '1.25rem',\n    },\n    h6: {\n      ...headingDefaults,\n      fontSize: '1rem',\n    },\n  },\n  palette: {\n    mode,\n    ...(mode === 'light'\n      ? {\n          // palette values for light mode\n          primary: {\n            ...colorPalette.palette.primary,\n          },\n          secondary: {\n            ...colorPalette.palette.secondary,\n          },\n          background: {\n            paper: grey[200],\n            default: grey[200],\n          },\n          text: {\n            primary: '#000000',\n          },\n        }\n      : {\n          // palette values for dark mode\n          primary: {\n            ...colorPalette.palette.primary,\n          },\n          secondary: {\n            ...colorPalette.palette.secondary,\n          },\n          background: {\n            paper: grey[900],\n            default: grey[900],\n          },\n          text: {\n            primary: '#ffffff',\n          },\n        }),\n  },\n})\n\nexport const ColorModeContext = createContext({ toggleColorMode: () => {} })\n","import { createContext } from 'react'\n\nexport const TempModeContext = createContext({\n  toggleTempMode: () => {},\n  mode: 'F',\n})\n","import {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  FormControlLabel,\n  Switch,\n  Theme,\n  ThemeProvider,\n  Tooltip,\n  Typography,\n  useTheme,\n} from '@mui/material'\nimport React, { useContext } from 'react'\nimport { ColorModeContext, lighterPalette, darkPalette } from '../../styles/theme'\nimport { TempModeContext } from '../../contexts'\n\nconst SettingsDialog = ({ open, onClose }: { open: boolean; onClose: () => void }): JSX.Element => {\n  const theme = useTheme<Theme>()\n\n  const colorMode = useContext(ColorModeContext)\n  const tempMode = useContext(TempModeContext)\n\n  return (\n    <Dialog fullWidth maxWidth='sm' open={open} onClose={onClose} sx={{}}>\n      <DialogTitle sx={{ display: 'flex', justifyContent: 'center' }}>\n        <Typography variant='button'>Settings</Typography>\n      </DialogTitle>\n      <DialogContent>\n        <Box\n          noValidate\n          component='form'\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            m: 'auto',\n            width: 'fit-content',\n          }}\n        >\n          <FormControlLabel\n            sx={{ mt: 1 }}\n            control={<Switch checked={theme.palette.mode === 'dark'} onChange={colorMode.toggleColorMode} />}\n            label='Dark mode'\n            labelPlacement='start'\n          />\n          <Tooltip title='Celsius mode coming soon'>\n            <FormControlLabel\n              sx={{ mt: 1 }}\n              control={<Switch disabled checked={tempMode.mode === 'C'} onChange={tempMode.toggleTempMode} />}\n              label='Celsius mode'\n              labelPlacement='start'\n            />\n          </Tooltip>\n        </Box>\n      </DialogContent>\n      <DialogActions>\n        <ThemeProvider theme={theme.palette.mode === 'dark' ? lighterPalette : darkPalette}>\n          <Button color='primary' variant='text' onClick={onClose}>\n            Close\n          </Button>\n        </ThemeProvider>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nexport default SettingsDialog\n","import React, { useState } from 'react'\nimport AppBar from '@mui/material/AppBar'\nimport Box from '@mui/material/Box'\nimport Toolbar from '@mui/material/Toolbar'\nimport IconButton from '@mui/material/IconButton'\nimport Typography from '@mui/material/Typography'\nimport SettingsIcon from '@mui/icons-material/Settings'\nimport HelpOutlineIcon from '@mui/icons-material/HelpOutline'\nimport Container from '@mui/material/Container'\nimport Tooltip from '@mui/material/Tooltip'\nimport { useTheme } from '@mui/styles'\nimport { Theme } from '@mui/material/styles'\nimport SettingsDialog from '../general/SettingsDialog'\n\nconst NavBar = (): JSX.Element => {\n  const theme = useTheme<Theme>()\n\n  const [openSettings, setOpenSettings] = useState<boolean>(false)\n\n  const handleOpenSettingsMenu = () => {\n    setOpenSettings(true)\n  }\n\n  const handleCloseSettingsMenu = () => {\n    setOpenSettings(false)\n  }\n\n  return (\n    <AppBar position='static' sx={{ background: theme.palette.primary.main }}>\n      <Container maxWidth='sm'>\n        <Toolbar disableGutters sx={{ ml: theme.custom?.margin, mr: theme.custom?.margin }}>\n          <Box sx={{ flexGrow: 1, display: 'flex' }}>\n            <Tooltip title='View info about game'>\n              <IconButton size='large' aria-label='help button' aria-haspopup='true' color='inherit'>\n                <HelpOutlineIcon />\n              </IconButton>\n            </Tooltip>\n          </Box>\n\n          <Typography\n            variant='h1'\n            noWrap\n            component='div'\n            align='center'\n            color={theme.palette.primary.contrastText}\n            sx={{\n              mr: 2,\n              flexGrow: 1,\n              display: 'flex',\n              letterSpacing: '2px',\n              fontWeight: 300,\n              lineHeight: { xs: '1.2rem', sm: '1.6rem' },\n              fontSize: { xs: '1.4rem', sm: '1.8rem' },\n            }}\n          >\n            WEATHER\n            <br />\n            GUESSER\n          </Typography>\n\n          <Box sx={{ flexGrow: 0 }}>\n            <Tooltip title='Open settings'>\n              <IconButton\n                size='large'\n                aria-label='settings button'\n                aria-haspopup='true'\n                onClick={handleOpenSettingsMenu}\n              >\n                <SettingsIcon style={{ color: theme.palette.primary.contrastText }} />\n              </IconButton>\n            </Tooltip>\n            <SettingsDialog open={openSettings} onClose={handleCloseSettingsMenu} />\n          </Box>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  )\n}\n\nexport default NavBar\n","import { Box, Container } from '@mui/material'\nimport { Theme } from '@mui/material/styles'\nimport { useTheme } from '@mui/styles'\nimport React, { ReactNode } from 'react'\nimport NavBar from './NavBar'\n\nconst Layout = ({ children }: { children?: ReactNode }): JSX.Element => {\n  const theme = useTheme<Theme>()\n\n  return (\n    <Box\n      sx={{\n        bgcolor: 'background.default',\n        color: 'text.primary',\n        width: '100%',\n        minHeight: '100vh',\n      }}\n    >\n      <NavBar />\n      <Container maxWidth='sm'>\n        <Box\n          sx={{\n            mt: 4,\n            ml: theme.custom?.margin,\n            mr: theme.custom?.margin,\n          }}\n        >\n          {children}\n        </Box>\n      </Container>\n    </Box>\n  )\n}\n\nexport default Layout\n","import { Box, Theme, useTheme } from '@mui/material'\nimport React from 'react'\n\nconst GoogleMap = ({ location }: { location: string }): JSX.Element => {\n  const theme = useTheme<Theme>()\n\n  let params = `key=${process.env.REACT_APP_GOOGLE_MAPS_KEY}&q=${location.replace(' ', '+')}`\n\n  return (\n    <Box\n      sx={{\n        // Trick for making iframe responsive: https://stackoverflow.com/questions/17838607/making-an-iframe-responsive\n        position: 'relative',\n        pb: '75%', // 4:3 ratio\n        pt: '25px',\n        height: 0,\n        iframe: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n        },\n      }}\n    >\n      <iframe\n        title='Map'\n        width='525'\n        height='400'\n        style={{ border: '0', filter: theme.palette.mode === 'dark' ? 'invert(90%)' : undefined }}\n        loading='lazy'\n        allowFullScreen\n        src={`https://www.google.com/maps/embed/v1/place?${params}`}\n      ></iframe>\n    </Box>\n  )\n}\n\nexport default GoogleMap\n","import { Button } from '@mui/material'\nimport React from 'react'\n\nconst GuessFormButton = ({\n  next,\n  onNext,\n}: {\n  next: boolean\n  onNext: (event: React.MouseEvent) => void\n}): JSX.Element => {\n  return (\n    <>\n      {next ? (\n        <Button color='secondary' variant='contained' onClick={onNext}>\n          Next\n        </Button>\n      ) : (\n        <Button color='secondary' variant='contained' type='submit'>\n          Submit\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default GuessFormButton\n","import { Box, InputBaseComponentProps, TextField } from '@mui/material'\nimport React from 'react'\n\nconst IntegerTextField = ({\n  disabled,\n  value,\n  label,\n  inputProps,\n  onChange,\n  onError,\n  onBlur,\n}: {\n  disabled: boolean\n  value: string\n  label: string\n  inputProps?: InputBaseComponentProps\n  onChange: (value: string) => void\n  onError: (error: boolean) => void\n  onBlur: () => void\n}): JSX.Element => {\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    const parsedInt = parseInt(value)\n    if (value === '' || value === '-') {\n      onError(false)\n      onChange(value)\n    } else if (Number.isFinite(parsedInt)) {\n      onError(false)\n      onChange(parsedInt.toString())\n    }\n  }\n\n  return (\n    <Box\n      sx={{\n        '& .MuiTextField-root': { width: '12ch' },\n      }}\n    >\n      <TextField\n        disabled={disabled}\n        type='text'\n        variant='outlined'\n        size='small'\n        label={label}\n        value={value}\n        onChange={changeHandler}\n        onBlur={onBlur}\n        inputProps={{ pattern: '-?[0-9]*', style: { textAlign: 'right' }, ...inputProps }}\n        title='Whole integers only'\n      />\n    </Box>\n  )\n}\n\nexport default IntegerTextField\n","import Slider from '@mui/material/Slider'\nimport { Mark } from '@mui/base'\nimport { Stack } from '@mui/material'\nimport IntegerTextField from './IntegerTextField'\nimport React from 'react'\n\nconst InputSlider = ({\n  marks,\n  height,\n  min,\n  max,\n  step,\n  disabled,\n  label,\n  value,\n  onChange,\n  onError,\n}: {\n  marks: Mark[]\n  height: number\n  min: number\n  max: number\n  step: number\n  disabled: boolean\n  label: string\n  value: string\n  onChange: (value: string) => void\n  onError: (error: boolean) => void\n}): JSX.Element => {\n  const handleSliderChange = (_event: Event, newValue: number | number[]) => {\n    onChange(Array.isArray(newValue) ? '0' : newValue.toString())\n    onError(false)\n  }\n\n  const handleBlur = () => {\n    const num = parseInt(value)\n    if (!num) {\n      return\n    }\n\n    if (num > max) {\n      onChange(max.toString())\n    } else if (num < min) {\n      onChange(min.toString())\n    }\n  }\n\n  const sliderValue = parseInt(value)\n\n  return (\n    <Stack sx={{ height: height }} spacing={1} direction='row' alignItems='center'>\n      <Slider\n        orientation='vertical'\n        value={sliderValue ? sliderValue : 0}\n        valueLabelDisplay='auto'\n        step={step}\n        marks={marks}\n        min={min}\n        max={max}\n        aria-labelledby='input-slider'\n        onChange={handleSliderChange}\n        disabled={disabled}\n      />\n\n      <IntegerTextField\n        disabled={disabled}\n        value={value}\n        label={label}\n        onChange={onChange}\n        onError={onError}\n        inputProps={{\n          'aria-labelledby': 'input-slider',\n        }}\n        onBlur={handleBlur}\n      />\n    </Stack>\n  )\n}\n\nexport default InputSlider\n","import { Box, Container, Stack } from '@mui/material'\nimport React, { useState, useContext, useMemo } from 'react'\nimport AnimatedAlert from '../general/AnimatedAlert'\nimport GuessFormButton from '../general/GuessFormButton'\nimport InputSlider from '../general/InputSlider'\nimport { TempModeContext } from 'src/contexts'\n\nconst TempGuessForm = ({\n  onSubmit,\n  textFieldDisabled,\n  tempGuess,\n  onTempGuessChange,\n  onNextButtonClick,\n}: {\n  onSubmit: (event: React.FormEvent) => void\n  textFieldDisabled: boolean\n  tempGuess: string\n  onTempGuessChange: (guess: string) => void\n  onNextButtonClick: (event: React.MouseEvent) => void\n}): JSX.Element => {\n  const tempMode = useContext(TempModeContext)\n\n  const [hasError, setHasError] = useState<boolean>(false)\n\n  const submitHandler = (event: React.FormEvent) => {\n    event.preventDefault()\n\n    if (Number.isFinite(parseInt(tempGuess))) {\n      onSubmit(event)\n    } else {\n      // Validation error on submit\n      setHasError(true)\n    }\n  }\n\n  const marks = useMemo(\n    () =>\n      tempMode.mode === 'F'\n        ? [\n            {\n              value: 0,\n              label: '0°F',\n            },\n            {\n              value: 140,\n              label: '140°F',\n            },\n            {\n              value: -140,\n              label: '-140°F',\n            },\n          ]\n        : [\n            {\n              value: 0,\n              label: '0°C',\n            },\n            {\n              value: 60,\n              label: '60°C',\n            },\n            {\n              value: -96,\n              label: '-96°C',\n            },\n          ],\n    [tempMode.mode],\n  )\n\n  const max = tempMode.mode === 'F' ? 140 : 60\n  const min = tempMode.mode === 'F' ? -140 : -96\n\n  return (\n    <form id='city-temp-form' onSubmit={submitHandler}>\n      <Container\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 2,\n          mb: 2,\n        }}\n      >\n        <Stack spacing={1} direction='row' alignItems='center'>\n          <InputSlider\n            height={250}\n            marks={marks}\n            min={min}\n            max={max}\n            step={tempMode.mode === 'F' ? 1 : 0.5}\n            label={tempMode.mode === 'F' ? 'Temp. (°F)' : 'Temp. (°C)'}\n            disabled={textFieldDisabled}\n            value={tempGuess}\n            onChange={onTempGuessChange}\n            onError={setHasError}\n          />\n\n          <Box sx={{ ml: 4 }}>\n            <GuessFormButton next={textFieldDisabled} onNext={onNextButtonClick} />\n          </Box>\n        </Stack>\n      </Container>\n\n      <AnimatedAlert show={hasError} message='Must be a valid whole number.' />\n    </form>\n  )\n}\n\nexport default TempGuessForm\n","import { Typography } from '@mui/material'\nimport React from 'react'\n\nconst ScoreDisplay = ({ label, score }: { label: string; score: number }): JSX.Element => {\n  return (\n    <Typography variant='button'>\n      {label}: {score}\n    </Typography>\n  )\n}\n\nexport default ScoreDisplay\n","import { Box, Step, StepLabel, Stepper, Typography } from '@mui/material'\nimport React from 'react'\n\nconst CityStepper = ({ activeStep, steps }: { activeStep: number; steps: string[] }): JSX.Element => {\n  return (\n    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <Typography variant='button'>Cities:</Typography>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label) => {\n          return (\n            <Step key={label}>\n              <StepLabel>{''}</StepLabel>\n            </Step>\n          )\n        })}\n      </Stepper>\n    </Box>\n  )\n}\n\nexport default CityStepper\n","import React, { useEffect, useRef, useState } from 'react'\nimport axios from 'axios'\nimport { Box } from '@mui/material'\nimport Results from '../components/temp-guesser/Results'\nimport CityPrompt from '../components/temp-guesser/CityPrompt'\nimport GameRound from '../model/game-round'\nimport GameOver from '../components/general/GameOver'\nimport Layout from '../components/page-parts/Layout'\nimport GoogleMap from '../components/general/GoogleMap'\nimport TempGuessForm from '../components/temp-guesser/TempGuessForm'\nimport ScoreDisplay from '../components/general/ScoreDisplay'\nimport CityStepper from '../components/general/CityStepper'\n\nconst steps = new Array(GameRound.NUM_CITIES).fill('c')\n\nconst TempGuessGame = (): JSX.Element => {\n  // check if in development mode\n  let prefix = ''\n  if (process.env.REACT_APP_ENV === 'development') {\n    prefix = 'http://localhost:3000/'\n  } else {\n    prefix = 'https://weatherguesser.isaacsung.net/'\n  }\n\n  const gameRoundRef = useRef(new GameRound())\n\n  const [city, setCity] = useState('')\n  const [cityAscii, setCityAscii] = useState('')\n  const [country, setCountry] = useState('')\n  const [countryCode, setCountryCode] = useState('')\n  const [state, setState] = useState('')\n  const [tempGuess, setTempGuess] = useState('')\n  const [correctTemp, setCorrectTemp] = useState(0)\n  const [displayResults, setDisplayResults] = useState(false)\n  const [score, setScore] = useState(0)\n  const [scoreEarned, setScoreEarned] = useState(0)\n  const [gameOver, setGameOver] = useState(false)\n\n  useEffect(() => {\n    getRandomCity()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const getRandomCity = () => {\n    axios\n      .get(`${prefix}temperatures/random`)\n      .then((response) => {\n        if ('city' in response.data) {\n          if (gameRoundRef.current.addCity(response.data.city, response.data.countryCode)) {\n            setCity(response.data.city)\n            setCityAscii(response.data.cityAscii)\n            setCountry(response.data.country)\n            setCountryCode(response.data.countryCode)\n            setState(response.data.state)\n            setDisplayResults(false)\n            setTempGuess('')\n          } else {\n            getRandomCity()\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const onTempGuessChange = (guess: string) => {\n    setTempGuess(guess)\n  }\n\n  const onSubmit = (e: React.FormEvent) => {\n    e.preventDefault()\n\n    let params = `city=${cityAscii}&country=${countryCode}`\n    params = encodeURI(params)\n\n    axios\n      .get(`${prefix}temperatures?${params}`)\n      .then((response) => {\n        if ('temperature' in response.data) {\n          const tempGuessNum = parseInt(tempGuess)\n          const temperature = Math.round(response.data.temperature)\n          const difference = Math.abs(tempGuessNum - temperature)\n          setScoreEarned(gameRoundRef.current.updateScore(difference))\n          setCorrectTemp(temperature)\n          setDisplayResults(true)\n          setScore(gameRoundRef.current.score)\n\n          if (gameRoundRef.current.isGameOver()) {\n            setGameOver(true)\n          }\n        }\n      })\n      .catch((error) => {\n        console.log(error)\n      })\n  }\n\n  const onNext = (e: React.MouseEvent) => {\n    e.preventDefault()\n    getRandomCity()\n  }\n\n  const onPlayAgain = (e: React.MouseEvent) => {\n    e.preventDefault()\n    gameRoundRef.current.reset()\n\n    setTempGuess('')\n    setCorrectTemp(0)\n    setDisplayResults(false)\n    setScore(0)\n    setScoreEarned(0)\n    setGameOver(false)\n\n    getRandomCity()\n  }\n\n  let location\n  if (state && state !== '') {\n    location = `${city}, ${state}, ${country}`\n  } else {\n    location = `${city}, ${country}`\n  }\n\n  return (\n    <Layout>\n      <Box sx={{ display: 'flex', flexDirection: 'column', justifyContent: 'space-between' }}>\n        {!displayResults && !gameOver && (\n          <Box sx={{ mb: 2 }}>\n            <CityPrompt location={location} />\n          </Box>\n        )}\n\n        {displayResults && (\n          <Box sx={{ mb: 2 }}>\n            <Results\n              correctTemp={correctTemp}\n              guessedTemp={parseInt(tempGuess)}\n              scoreEarned={scoreEarned}\n              city={city}\n            />\n          </Box>\n        )}\n\n        {gameOver && (\n          <Box sx={{ mb: 4 }}>\n            <GameOver gameRound={gameRoundRef.current} onButtonClick={onPlayAgain} />\n          </Box>\n        )}\n\n        {!gameOver && (\n          <TempGuessForm\n            onSubmit={onSubmit}\n            textFieldDisabled={displayResults}\n            tempGuess={tempGuess}\n            onTempGuessChange={onTempGuessChange}\n            onNextButtonClick={onNext}\n          />\n        )}\n\n        <Box sx={{ display: 'flex', justifyContent: 'center', mb: 2 }}>\n          <ScoreDisplay label='Score' score={score} />\n        </Box>\n\n        <Box sx={{ mb: 4 }}>\n          <CityStepper\n            activeStep={gameOver ? gameRoundRef.current.cityNumber : gameRoundRef.current.cityNumber - 1}\n            steps={steps}\n          />\n        </Box>\n\n        <GoogleMap location={location} />\n      </Box>\n    </Layout>\n  )\n}\n\nexport default TempGuessGame\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport TempGuessGame from './pages/TempGuessGame'\n\nexport default function Routes(): JSX.Element {\n  return (\n    <Router basename='/'>\n      <Switch>\n        <Route path='/' exact>\n          <TempGuessGame />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n","import { ThemeProvider, createTheme, useMediaQuery } from '@mui/material'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport Routes from './Routes'\nimport { getDesignTokens, ColorModeContext } from './styles/theme'\nimport { TempModeContext } from './contexts'\nimport './index.css'\n\nfunction App(): JSX.Element {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)')\n\n  const [mode, setMode] = useState<'light' | 'dark'>(prefersDarkMode ? 'dark' : 'light')\n  const colorModeContext = useMemo(\n    () => ({\n      toggleColorMode: () => {\n        setMode((prevMode) => (prevMode === 'light' ? 'dark' : 'light'))\n      },\n    }),\n    [],\n  )\n\n  const [tempMode, setTempMode] = useState<'F' | 'C'>('F')\n  const tempModeContext = useMemo(\n    () => ({\n      toggleTempMode: () => {\n        setTempMode((prevMode) => (prevMode === 'F' ? 'C' : 'F'))\n      },\n      mode: tempMode,\n    }),\n    [tempMode],\n  )\n\n  useEffect(() => {\n    setMode(prefersDarkMode ? 'dark' : 'light')\n  }, [prefersDarkMode])\n\n  const theme = React.useMemo(() => createTheme(getDesignTokens(mode)), [mode])\n\n  useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side')\n    if (jssStyles) {\n      jssStyles.parentElement?.removeChild(jssStyles)\n    }\n  }, [])\n\n  return (\n    <TempModeContext.Provider value={tempModeContext}>\n      <ColorModeContext.Provider value={colorModeContext}>\n        <ThemeProvider theme={theme}>\n          <Routes />\n        </ThemeProvider>\n      </ColorModeContext.Provider>\n    </TempModeContext.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n//import './index.css';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}